// Code generated by goagen v1.5.13, DO NOT EDIT.
//
// API "test_build": url Resource Client
//
// Command:
// $ goagen
// --design=github.com/kod-source/Docker-Goa-Air/design
// --out=/Users/horikoudai/Documents/ProgrammingLearning/Docker-Goa-Air/app
// --version=v1.5.13

package client

import (
	"context"
	"fmt"
	"net/http"
	"net/url"
	"strconv"
)

// URLAddURLPath computes a request path to the url_add action of url.
func URLAddURLPath(left int, middle int, right int) string {
	param0 := strconv.Itoa(left)
	param1 := strconv.Itoa(middle)
	param2 := strconv.Itoa(right)
	return fmt.Sprintf("/url/%s/%s/%s", param0, param1, param2)
}

// add returns the sum
func (c *Client) URLAddURL(ctx context.Context, path string) (*http.Response, error) {
	req, err := c.NewURLAddURLRequest(ctx, path)
	if err != nil {
		return nil, err
	}
	return c.Client.Do(ctx, req)
}

// NewURLAddURLRequest create the request corresponding to the url_add action endpoint of the url resource.
func (c *Client) NewURLAddURLRequest(ctx context.Context, path string) (*http.Request, error) {
	scheme := c.Scheme
	if scheme == "" {
		scheme = "http"
	}
	u := url.URL{Host: c.Host, Scheme: scheme, Path: path}
	req, err := http.NewRequestWithContext(ctx, "GET", u.String(), nil)
	if err != nil {
		return nil, err
	}
	return req, nil
}
